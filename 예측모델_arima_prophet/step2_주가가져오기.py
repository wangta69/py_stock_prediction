import yfinance as yf
import pandas as pd

eh_df = yf.download('EH',
                      start='2019-01-01',
                      end='2021-04-22',
                      progress=False)
# print(eh_df)
"""
                 Open       High        Low      Close  Adj Close   Volume
Date                                                                      
2019-12-13  12.450000  13.700000  12.120000  12.900000  12.900000   290800
2019-12-16  12.900000  13.200000  12.110000  12.500000  12.500000   157600
2019-12-17  12.500000  12.643000  11.000000  11.070000  11.070000   221400
2019-12-18  11.190000  11.190000   9.040000   9.520000   9.520000   403800
2019-12-19   9.440000   9.490000   7.840000   9.400000   9.400000   325100
...               ...        ...        ...        ...        ...      ...
2021-04-15  30.129999  30.129999  27.600000  28.930000  28.930000  1632300
2021-04-16  26.010000  28.350000  25.520000  27.910000  27.910000  3954000
2021-04-19  26.680000  26.730000  23.771999  24.790001  24.790001  2985900
2021-04-20  24.219999  25.879999  23.600000  24.580000  24.580000  2175000
2021-04-21  24.260000  26.680000  23.309999  25.820000  25.820000  2430500
"""

eh_df = eh_df[["Close"]]
# print(eh_df)
"""
                Close
Date                 
2019-12-13  12.900000
2019-12-16  12.500000
2019-12-17  11.070000
2019-12-18   9.520000
2019-12-19   9.400000
...               ...
2021-04-15  28.930000
2021-04-16  27.910000
2021-04-19  24.790001
2021-04-20  24.580000
2021-04-21  25.820000
"""

# 인덱스명을 바꾼다 Date to day
eh_df = eh_df.reset_index()
eh_df.columns = ['day', 'price']

# 인덱스 typedmf datetime으로 변경
eh_df['day'] = pd.to_datetime(eh_df['day'])

eh_df.index = eh_df['day']
eh_df.set_index('day', inplace=True)

# print(eh_df)
"""
                price
day                  
2019-12-13  12.900000
2019-12-16  12.500000
2019-12-17  11.070000
2019-12-18   9.520000
2019-12-19   9.400000
...               ...
2021-04-15  28.930000
2021-04-16  27.910000
2021-04-19  24.790001
2021-04-20  24.580000
2021-04-21  25.820000

[340 rows x 1 columns]
"""

# 335개의 까지 train용 데이타로 가져온다
eh_train_df = eh_df[:335]
# print(eh_train_df)
"""
                price
day                  
2019-12-13  12.900000
2019-12-16  12.500000
2019-12-17  11.070000
2019-12-18   9.520000
2019-12-19   9.400000
...               ...
2021-04-08  34.070000
2021-04-09  34.340000
2021-04-12  29.200001
2021-04-13  29.020000
2021-04-14  29.400000
"""
# 나머지 5개는 실제가격으로 추후 예상가격과의 비교를 위해 남겨둔다.
eh_test_df =eh_df[335:]
# print(eh_test_df)
"""
                price
day                  
2021-04-15  28.930000
2021-04-16  27.910000
2021-04-19  24.790001
2021-04-20  24.580000
2021-04-21  25.820000
"""








